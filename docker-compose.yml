version: "3.9"
services:
  # Gateway
  api-gateway:
    image: api-gateway
    restart: always
    build:
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "7003:80"
    networks:
      - main-network
      
  # Microservices
  
  auth-microservice:
    image: auth-microservice
    restart: always
    build:
      dockerfile: AuthMicroservice/Dockerfile
    ports:
      - "5010:80"
    networks:
      - main-network
    depends_on: 
      - auth-db
      
  # Databases
  auth-db:
    container_name: "auth-db"
    image: postgres:16-alpine
    env_file:
      - auth-db.env
    networks:
      - main-network
      
#  notifications-db:
#    container_name: "notifications-db"
#    image: postgres:16-alpine
#    env_file:
#      - notifications-db.env
#    networks:
#      - main-network
        
#  chats-db:
#    container_name: "chats-db"
#    image: postgres:16-alpine
#    env_file:
#      - chats-db.env
#    ports:
#      - "5051:5432"
#    networks:
#      - main-network
#  
#  content-db:
#    container_name: "content-db"
#    image: redis:7.2.4-alpine
#    env_file:
#      - content-db.env
#    ports:
#      - "5052:6379"
#    networks:
#      - main-network
#  notifications-db:
#    container_name: "notifications-db"
#    image: postgres:16-alpine
#    env_file:
#      - notifications-db.env
#    ports:
#      - "5053:5432"
#    networks:
#      - main-network
#  projects-db:
#    container_name: "projects-db"
#    image: postgres:16-alpine
#    env_file:
#      - projects-db.env
#    ports:
#      - "5054:5432"
#    networks:
#      - main-network
  
  rabbit-mq:
    container_name: "rabbit-mq"
    image: rabbitmq:3.13-management-alpine
    env_file:
      - rabbit-mq.env
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - main-network
      
networks:
  main-network:
    driver: bridge
