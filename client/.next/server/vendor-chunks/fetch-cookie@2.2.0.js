/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/fetch-cookie@2.2.0";
exports.ids = ["vendor-chunks/fetch-cookie@2.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/fetch-cookie@2.2.0/node_modules/fetch-cookie/cjs/index-wrapper.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/fetch-cookie@2.2.0/node_modules/fetch-cookie/cjs/index-wrapper.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/.pnpm/fetch-cookie@2.2.0/node_modules/fetch-cookie/cjs/index.js\")[\"default\"]\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vZmV0Y2gtY29va2llQDIuMi4wL25vZGVfbW9kdWxlcy9mZXRjaC1jb29raWUvY2pzL2luZGV4LXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEseUpBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlwbG9tLWNsaWVudC8uL25vZGVfbW9kdWxlcy8ucG5wbS9mZXRjaC1jb29raWVAMi4yLjAvbm9kZV9tb2R1bGVzL2ZldGNoLWNvb2tpZS9janMvaW5kZXgtd3JhcHBlci5qcz8wOTA3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9pbmRleC5qcycpLmRlZmF1bHRcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/fetch-cookie@2.2.0/node_modules/fetch-cookie/cjs/index-wrapper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/fetch-cookie@2.2.0/node_modules/fetch-cookie/cjs/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/fetch-cookie@2.2.0/node_modules/fetch-cookie/cjs/index.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __reExport = (target, module2, copyDefault, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });\n  }\n  return target;\n};\nvar __toESM = (module2, isNodeMode) => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);\n};\nvar __toCommonJS = /* @__PURE__ */ ((cache) => {\n  return (module2, temp) => {\n    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);\n  };\n})(typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : 0);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar src_exports = {};\n__export(src_exports, {\n  default: () => fetchCookie\n});\nvar tough = __toESM(__webpack_require__(/*! tough-cookie */ \"(ssr)/./node_modules/.pnpm/tough-cookie@4.1.4/node_modules/tough-cookie/lib/cookie.js\"), 1);\nvar import_set_cookie_parser = __webpack_require__(/*! set-cookie-parser */ \"(ssr)/./node_modules/.pnpm/set-cookie-parser@2.6.0/node_modules/set-cookie-parser/lib/set-cookie.js\");\nfunction isDomainOrSubdomain(destination, original) {\n  const orig = new URL(original).hostname;\n  const dest = new URL(destination).hostname;\n  return orig === dest || orig.endsWith(`.${dest}`);\n}\nconst referrerPolicy = /* @__PURE__ */ new Set([\n  \"\",\n  \"no-referrer\",\n  \"no-referrer-when-downgrade\",\n  \"same-origin\",\n  \"origin\",\n  \"strict-origin\",\n  \"origin-when-cross-origin\",\n  \"strict-origin-when-cross-origin\",\n  \"unsafe-url\"\n]);\nfunction parseReferrerPolicy(policyHeader) {\n  const policyTokens = policyHeader.split(/[,\\s]+/);\n  let policy = \"\";\n  for (const token of policyTokens) {\n    if (token !== \"\" && referrerPolicy.has(token)) {\n      policy = token;\n    }\n  }\n  return policy;\n}\nfunction doNothing(init, name) {\n}\nfunction callDeleteMethod(init, name) {\n  init.headers.delete(name);\n}\nfunction deleteFromObject(init, name) {\n  const headers = init.headers;\n  for (const key of Object.keys(headers)) {\n    if (key.toLowerCase() === name) {\n      delete headers[key];\n    }\n  }\n}\nfunction identifyDeleteHeader(init) {\n  if (init.headers == null) {\n    return doNothing;\n  }\n  if (typeof init.headers.delete === \"function\") {\n    return callDeleteMethod;\n  }\n  return deleteFromObject;\n}\nconst redirectStatus = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nfunction isRedirect(status) {\n  return redirectStatus.has(status);\n}\nfunction handleRedirect(fetchImpl, init, response) {\n  return __async(this, null, function* () {\n    var _a, _b, _c;\n    switch ((_a = init.redirect) != null ? _a : \"follow\") {\n      case \"error\":\n        throw new TypeError(`URI requested responded with a redirect and redirect mode is set to error: ${response.url}`);\n      case \"manual\":\n        return response;\n      case \"follow\":\n        break;\n      default:\n        throw new TypeError(`Invalid redirect option: ${init.redirect}`);\n    }\n    const locationUrl = response.headers.get(\"location\");\n    if (locationUrl === null) {\n      return response;\n    }\n    const requestUrl = response.url;\n    const redirectUrl = new URL(locationUrl, requestUrl).toString();\n    const redirectCount = (_b = init.redirectCount) != null ? _b : 0;\n    const maxRedirect = (_c = init.maxRedirect) != null ? _c : 20;\n    if (redirectCount >= maxRedirect) {\n      throw new TypeError(`Reached maximum redirect of ${maxRedirect} for URL: ${requestUrl}`);\n    }\n    init = __spreadProps(__spreadValues({}, init), {\n      redirectCount: redirectCount + 1\n    });\n    const deleteHeader = identifyDeleteHeader(init);\n    if (!isDomainOrSubdomain(requestUrl, redirectUrl)) {\n      for (const name of [\"authorization\", \"www-authenticate\", \"cookie\", \"cookie2\"]) {\n        deleteHeader(init, name);\n      }\n    }\n    const maybeNodeStreamBody = init.body;\n    const maybeStreamBody = init.body;\n    if (response.status !== 303 && init.body != null && (typeof maybeNodeStreamBody.pipe === \"function\" || typeof maybeStreamBody.pipeTo === \"function\")) {\n      throw new TypeError(\"Cannot follow redirect with body being a readable stream\");\n    }\n    if (response.status === 303 || (response.status === 301 || response.status === 302) && init.method === \"POST\") {\n      init.method = \"GET\";\n      init.body = void 0;\n      deleteHeader(init, \"content-length\");\n    }\n    if (response.headers.has(\"referrer-policy\")) {\n      init.referrerPolicy = parseReferrerPolicy(response.headers.get(\"referrer-policy\"));\n    }\n    return yield fetchImpl(redirectUrl, init);\n  });\n}\nfunction addCookiesToRequest(input, init, cookie) {\n  if (cookie === \"\") {\n    return init;\n  }\n  const maybeRequest = input;\n  const maybeHeaders = init.headers;\n  if (maybeRequest.headers && typeof maybeRequest.headers.append === \"function\") {\n    maybeRequest.headers.append(\"cookie\", cookie);\n  } else if (maybeHeaders && typeof maybeHeaders.append === \"function\") {\n    maybeHeaders.append(\"cookie\", cookie);\n  } else {\n    init = __spreadProps(__spreadValues({}, init), { headers: __spreadProps(__spreadValues({}, init.headers), { cookie }) });\n  }\n  return init;\n}\nfunction getCookiesFromResponse(response) {\n  const maybeNodeFetchHeaders = response.headers;\n  if (typeof maybeNodeFetchHeaders.getAll === \"function\") {\n    return maybeNodeFetchHeaders.getAll(\"set-cookie\");\n  }\n  if (typeof maybeNodeFetchHeaders.raw === \"function\") {\n    const headers = maybeNodeFetchHeaders.raw();\n    if (Array.isArray(headers[\"set-cookie\"])) {\n      return headers[\"set-cookie\"];\n    }\n    return [];\n  }\n  const cookieString = response.headers.get(\"set-cookie\");\n  if (cookieString !== null) {\n    return (0, import_set_cookie_parser.splitCookiesString)(cookieString);\n  }\n  return [];\n}\nfunction fetchCookie(fetch, jar, ignoreError = true) {\n  const actualFetch = fetch;\n  const actualJar = jar != null ? jar : new tough.CookieJar();\n  function fetchCookieWrapper(input, init) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const originalInit = init != null ? init : {};\n      init = __spreadProps(__spreadValues({}, init), { redirect: \"manual\" });\n      const requestUrl = typeof input === \"string\" ? input : (_a = input.url) != null ? _a : input.href;\n      const cookie = yield actualJar.getCookieString(requestUrl);\n      init = addCookiesToRequest(input, init, cookie);\n      const response = yield actualFetch(input, init);\n      const cookies = getCookiesFromResponse(response);\n      yield Promise.all(cookies.map((cookie2) => __async(this, null, function* () {\n        return yield actualJar.setCookie(cookie2, response.url, { ignoreError });\n      })));\n      if (((_b = init.redirectCount) != null ? _b : 0) > 0) {\n        Object.defineProperty(response, \"redirected\", { value: true });\n      }\n      if (!isRedirect(response.status)) {\n        return response;\n      }\n      return yield handleRedirect(fetchCookieWrapper, originalInit, response);\n    });\n  }\n  fetchCookieWrapper.toughCookie = tough;\n  return fetchCookieWrapper;\n}\nfetchCookie.toughCookie = tough;\nmodule.exports = __toCommonJS(src_exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/fetch-cookie@2.2.0/node_modules/fetch-cookie/cjs/index.js\n");

/***/ })

};
;